# -*- coding: utf-8 -*-
"""Biblioteca_funcoes_DNA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LanPfg2jEdLMRXsvm5fkrfPb1tqujWRX

#Exercício 1 de módulos personalizados

Construa um pequeno módulo com três funções para manipular sequências de DNA: <p>
transcrição de sequências de DNA; <p>
conteúdo (%) de C-G em sequências de DNA; <p>
geração de sequência aleatória de DNA.
"""

def gera_seq(tamanho):
  import random 
  seq = ''
  nucleotideos = ('A', 'C', 'G', 'T')
  for i in range(0, tamanho):
    seq = seq + random.choice(nucleotideos)
  return seq


def porcentagem_cg(dna):
  dna = dna.upper()
  total = len(dna)
  c = dna.count('C')
  g = dna.count('G')
  quantCG = c + g
  porcentagem = quantCG / total
  porcent = round((porcentagem * 100), 2)
  return porcent


def porcentagem_at(dna):
  dna = dna.upper()
  total = len(dna)
  a = dna.count('A')
  t = dna.count('T')
  quantAT = a + t
  porcentagem = quantAT / total
  porcent = round((porcentagem * 100), 2)
  return porcent


def transcricao(seq):
  seqRNA = ''
  dna_to_rna = {'A':'U', 'T':'A', 'C':'G', 'G':'C'}
  for nucleotideos in seqRNA:
    seqRNA = seqRNA + dna_to_rna[nucleotideos]
  return seqRNA


def complementar(seq):
  complemento = ''
  complementar = {'A':'T', 'T':'A', 'C':'G', 'G':'C'}
  for nucleotideos in seq:
    complemento = complemento + complementar[nucleotideos]
  return complemento
